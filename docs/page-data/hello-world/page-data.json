{
    "componentChunkName": "component---src-pages-mdx-slug-tsx",
    "path": "/hello-world/",
    "result": {"data":{"mdx":{"frontmatter":{"title":"Hello, World!","date":"November 7, 2021"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Hello, World!\",\n  \"date\": \"2021-11-07\",\n  \"description\": \"How else do all programmers begin learning new things?\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Hello, World!\"), mdx(\"p\", null, \"Well this has been such an interesting experience that I really did not expect\\nto endure. My project started as just a means for me to learn C++.\\nAfter looking into inheritance I decided that the next logical step was to\\nmake a game engine...\"), mdx(\"p\", null, \"Ok, to be fair I actually just wanted to make a game. But, when presented with the\\noptions to either use an existing game engine or make my own...well I did not\\nspend the last 2 weeks (at the time) learning C++ just to swap over to Unity3D, which\\nis what I used for my first game 4 years ago. Unreal Engine was most certainly a viable option\\nbut given that I wanted to focus on 2D arcade games, I felt that Unreal Engine was a bit\\noverkill for what I wanted to accomplish.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Prior to this endeavor the most software engineering experience I have to my name was full stack web development.\"))), mdx(\"p\", null, \"I do have about 7 years of professional experience working in software,\\neven if it is nearly all in front end web development. I guess what I am trying to say is that my entire\\nsuite of skills do not translate 1:1 into game development, I like to think that I had\\nenough knowhow to at least give it a shot. The worst that could happen is no one likes my game.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"I honestly believe is all anyone ever needs is to just be given a shot, if someone does not come along to offer such opportunity, I feel that it is your duty to make one.\"))), mdx(\"p\", null, \"So here, I am two months later and I have quite a bit to show for what I have built.\\nI have gone from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"std::cout << \\\"Hello, World!\\\" << std::endl;\"), \" to several working levels\\nin the first game to be built in my engine, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Ultra Cosmo Invaders\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Ultra Cosmo Invaders\"), \" is a \", mdx(\"a\", {\n    target: \"_blank\",\n    href: \"https://en.wikipedia.org/wiki/Galaga\"\n  }, \"Galaga\"), \"\\nclone that I felt was a good start to build with. Albiet, I figured something like\\nAsteroids or Space Invaders would have been even easier to build. Once I replayed both\\nof those games, I just didn't have as much fun playing them as I thought I would have.\\nBottom line is that I cannot force myself to build a game that I myself am not\\nmotivated to play, so Galaga it is! To be very honest, I did not even realize I was making\\nGalaga until other people told me that the game I had was similar. I chalk that up\\nto ignorance of what happens when you go from working on learning Polymorphism to\\nwriting a game engine in the span of a single day.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"bca53f75-8437-5e2d-bdea-201eca0b86b6","slug":"hello-world","__params":{"slug":"hello-world"}}},
    "staticQueryHashes": []}